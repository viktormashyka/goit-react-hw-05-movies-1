{"version":3,"file":"static/js/415.82af1af7.chunk.js","mappings":"kTAGMA,EAAW,8BACXC,EAAU,mCAEHC,EAAwB,mCAAG,WAAMC,GAAN,kFAChCC,EADgC,UACvBJ,EADuB,wCACiBC,EADjB,gEAGbI,EAAAA,GAAAA,IAAUD,EAAK,CAAED,OAAQA,IAHZ,cAG9BG,EAH8B,OAIpCC,QAAQC,IACN,mDACAF,EAASG,KAAKC,SAEVC,EAASC,EAAoBN,EAASG,KAAKC,SARb,kBAS7BC,GAT6B,sCAWhCN,EAAAA,GAAAA,SAAA,MAXgC,0CAY3B,IAZ2B,cAc9B,IAAIQ,MAAJ,MAd8B,0DAAH,sDAiCxBC,EAAiB,mCAAG,kGAASC,EAAT,EAASA,MAClCX,EADyB,UAChBJ,EADgB,kCACkBC,EADlB,4DAC6Ec,GAD7E,kBAGNV,EAAAA,GAAAA,IAAUD,GAHJ,cAGvBE,EAHuB,OAI7BC,QAAQC,IACN,4CACAF,EAASG,KAAKC,SAEVC,EAASC,EAAoBN,EAASG,KAAKC,SARpB,kBAStBC,GATsB,wCAWvB,IAAIE,MAAJ,MAXuB,0DAAH,sDAexBD,EAAsB,SAAAD,GAM1B,OALuBA,EAAOK,KAC5B,YACE,MAAO,CAAEC,GAD0C,EAAlDA,GACYC,eADsC,EAA9CA,eACwBC,MADsB,EAA9BA,MACeC,SADe,EAAvBA,SACkBC,OADK,EAAbA,OAEvC,GAGJ,EAEYC,EAAc,mCAAG,kGAASC,EAAT,EAASA,QAC/BnB,EADsB,UACbJ,EADa,mBACMuB,EADN,oBACyBtB,EADzB,gEAGHI,EAAAA,GAAAA,IAAUD,GAHP,cAGpBE,EAHoB,OAI1BC,QAAQC,IAAI,kCAAmCF,EAASG,MAElDe,EAAQlB,EAASG,KANG,kBAOnBe,GAPmB,wCASpB,IAAIX,MAAJ,MAToB,0DAAH,sDAadY,EAAkB,mCAAG,kGAASF,EAAT,EAASA,QACnCnB,EAD0B,UACjBJ,EADiB,mBACEuB,EADF,4BAC6BtB,EAD7B,gEAGPI,EAAAA,GAAAA,IAAUD,GAHH,cAGxBE,EAHwB,OAI9BC,QAAQC,IAAI,0CAA2CF,EAASG,KAAKiB,MAE/DA,EAAOpB,EAASG,KAAKiB,KANG,kBAOvBA,GAPuB,wCASxB,IAAIb,MAAJ,MATwB,0DAAH,sDAalBc,EAAqB,mCAAG,kGAASJ,EAAT,EAASA,QACtCnB,EAD6B,UACpBJ,EADoB,mBACDuB,EADC,4BAC0BtB,EAD1B,gEAGVI,EAAAA,GAAAA,IAAUD,GAHA,cAG3BE,EAH2B,OAIjCC,QAAQC,IACN,gDACAF,EAASG,KAAKC,SAGVc,EAAQlB,EAASG,KAAKC,QATK,kBAU1Bc,GAV0B,wCAY3B,IAAIX,MAAJ,MAZ2B,0DAAH,qD,kHCtClC,UA9Ca,WACX,OAA4Be,EAAAA,EAAAA,UAAS,IAArC,eAAOjB,EAAP,KAAekB,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MA4BjB,OA1BAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,IAAIC,gBACjBC,EAAS,mCAAG,8GAEOjC,EAAAA,EAAAA,IAAyB+B,EAAW9B,QAF3C,OAERQ,EAFQ,OAGdkB,EAAUlB,GAHI,gDAKdJ,QAAQC,IAAI,0BALE,yDAAH,qDAUf,OAFA2B,IAEO,WACLF,EAAWG,OACZ,CACF,GAAE,KAYD,kBAAMC,MAAO,CAAEC,WAAY,QAA3B,WACE,6CACA,wBACG3B,EAAOK,KAAI,SAAAQ,GAAK,OACf,yBACE,SAAC,KAAD,CAAMe,GAAE,iBAAYf,EAAMP,IAAMuB,MAAO,CAAEC,KAAMX,GAA/C,UACE,uBAAIN,EAAML,WAFLK,EAAMP,GADA,QAUxB,C","sources":["api.js","pages/Home.jsx"],"sourcesContent":["import axios from 'axios';\n// import PropTypes from 'prop-types';\n\nconst BASE_URL = 'https://api.themoviedb.org/';\nconst API_KEY = '857288c3c5f42347171bc7541b9a4b57';\n\nexport const fetchMoviesTrendingToday = async signal => {\n  const url = `${BASE_URL}3/trending/movie/day?api_key=${API_KEY}&language=en-US&page=1&include_adult=false`;\n  try {\n    const response = await axios.get(url, { signal: signal });\n    console.log(\n      'fetchMoviesTrendingToday response.data.results, ',\n      response.data.results\n    );\n    const movies = getNormalizedMovies(response.data.results);\n    return movies;\n  } catch (error) {\n    if (axios.isCancel(error)) {\n      return [];\n    }\n    throw new Error(error);\n  }\n};\n\n// export const fetchMoviesTrendingToday = async () => {\n//   const url = `${BASE_URL}3/trending/movie/day?api_key=${API_KEY}&language=en-US&page=1&include_adult=false`;\n//   try {\n//     const response = await axios.get(url);\n//     console.log(\n//       'fetchMoviesTrendingToday response.data.results, ',\n//       response.data.results\n//     );\n//     const movies = getNormalizedMovies(response.data.results);\n//     return movies;\n//   } catch (error) {\n//     throw new Error(error);\n//   }\n// };\n\nexport const fetchMoviesByName = async ({ query }) => {\n  const url = `${BASE_URL}3/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`;\n  try {\n    const response = await axios.get(url);\n    console.log(\n      'fetchMoviesByName response.data.results, ',\n      response.data.results\n    );\n    const movies = getNormalizedMovies(response.data.results);\n    return movies;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\nconst getNormalizedMovies = movies => {\n  const normalizedData = movies.map(\n    ({ id, original_title, title, overview, genres }) => {\n      return { id, original_title, title, overview, genres };\n    }\n  );\n  return normalizedData;\n};\n\nexport const fetchMovieById = async ({ movieId }) => {\n  const url = `${BASE_URL}3/movie/${movieId}?api_key=${API_KEY}&language=en-US&page=1&include_adult=false`;\n  try {\n    const response = await axios.get(url);\n    console.log('fetchMoviesById response.data, ', response.data);\n    // const movie = getNormalizedMovies(response.data.results);\n    const movie = response.data;\n    return movie;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\nexport const fetchMovieByIdCast = async ({ movieId }) => {\n  const url = `${BASE_URL}3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US&page=1&include_adult=false`;\n  try {\n    const response = await axios.get(url);\n    console.log('fetchMovieByIdCast response.data.cast, ', response.data.cast);\n    // const movie = getNormalizedMovies(response.data.results);\n    const cast = response.data.cast;\n    return cast;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\nexport const fetchMovieByIdReviews = async ({ movieId }) => {\n  const url = `${BASE_URL}3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1&include_adult=false`;\n  try {\n    const response = await axios.get(url);\n    console.log(\n      'fetchMovieByIdReviews response.data.results, ',\n      response.data.results\n    );\n    // const movie = getNormalizedMovies(response.data.results);\n    const movie = response.data.results;\n    return movie;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\n// export const getMovieById = movieId => {\n//   return movies.find(movie => movie.id === movieId);\n// };\n\n// export const getProductById = productId => {\n//   return products.find(product => product.id === productId);\n// };\n\n// fetchPhotos.propTypes = {\n//   searchPhotos: PropTypes.array.isRequired,\n//   page: PropTypes.number.isRequired,\n// };\n\n// import axios from 'axios';\n// import PropTypes from 'prop-types';\n\n// const BASE_URL = 'https://pixabay.com/api/';\n// const API_KEY = '29782836-0cb6e5c5167e525a8102df66c';\n\n// export const fetchPhotos = async ({ searchPhotos, page }) => {\n//   const per_page = 12;\n\n//   const url = `${BASE_URL}?key=${API_KEY}&q=${searchPhotos}&image_type=photo&orientation=horizontal&safesearch=true&page=${page}&per_page=${per_page}`;\n\n//   try {\n//     const response = await axios.get(url);\n\n//     const images = getNormalizedImages(response.data.hits);\n//     const pages = Math.ceil(response.data.totalHits / per_page);\n\n//     return { images, pages };\n//   } catch (error) {\n//     throw new Error(error);\n//   }\n// };\n\n// const getNormalizedImages = images => {\n//   const normalizedData = images.map(\n//     ({ id, tags, webformatURL, largeImageURL }) => {\n//       return { id, tags, webformatURL, largeImageURL };\n//     }\n//   );\n//   return normalizedData;\n// };\n\n// fetchPhotos.propTypes = {\n//   searchPhotos: PropTypes.array.isRequired,\n//   page: PropTypes.number.isRequired,\n// };\n\n//*** ***/\n","import { Link, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nimport { fetchMoviesTrendingToday } from 'api';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    const controller = new AbortController();\n    const getMovies = async () => {\n      try {\n        const movies = await fetchMoviesTrendingToday(controller.signal);\n        setMovies(movies);\n      } catch (error) {\n        console.log('Something went wrong:(');\n      }\n    };\n    getMovies();\n\n    return () => {\n      controller.abort();\n    };\n  }, []);\n\n  // useEffect(() => {\n  //   const getMovies = async () => {\n  //     const movies = await fetchMoviesTrendingToday();\n  //     console.log('Home movies, ', movies);\n  //     setMovies(movies);\n  //   };\n  //   getMovies();\n  // }, []);\n\n  return (\n    <main style={{ marginLeft: '30px' }}>\n      <h1>Trending today:</h1>\n      <ul>\n        {movies.map(movie => (\n          <li key={movie.id}>\n            <Link to={`movies/${movie.id}`} state={{ from: location }}>\n              <p>{movie.title}</p>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </main>\n  );\n};\n\nexport default Home;\n\n// import { Link, useLocation } from 'react-router-dom';\n// import { Container, CardWrapper, ProductName } from './ProductList.styled';\n\n// export const ProductList = ({ products }) => {\n//   const location = useLocation();\n\n//   return (\n//     <Container>\n//       {products.map(product => (\n//         <CardWrapper key={product.id}>\n//           <Link to={`${product.id}`} state={{ from: location }}>\n//             <img src=\"https://via.placeholder.com/200x100\" alt=\"\" />\n//             <ProductName>{product.name}</ProductName>\n//           </Link>\n//         </CardWrapper>\n//       ))}\n//     </Container>\n//   );\n// };\n"],"names":["BASE_URL","API_KEY","fetchMoviesTrendingToday","signal","url","axios","response","console","log","data","results","movies","getNormalizedMovies","Error","fetchMoviesByName","query","map","id","original_title","title","overview","genres","fetchMovieById","movieId","movie","fetchMovieByIdCast","cast","fetchMovieByIdReviews","useState","setMovies","location","useLocation","useEffect","controller","AbortController","getMovies","abort","style","marginLeft","to","state","from"],"sourceRoot":""}