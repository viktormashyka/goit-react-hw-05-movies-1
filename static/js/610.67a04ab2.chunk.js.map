{"version":3,"file":"static/js/610.67a04ab2.chunk.js","mappings":"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","sources":["api.js","components/BackLink.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n// import PropTypes from 'prop-types';\n\nconst BASE_URL = 'https://api.themoviedb.org/';\nconst API_KEY = '857288c3c5f42347171bc7541b9a4b57';\n\nexport const fetchMoviesTrendingToday = async signal => {\n  const url = `${BASE_URL}3/trending/movie/day?api_key=${API_KEY}&language=en-US&page=1&include_adult=false`;\n  try {\n    const response = await axios.get(url, { signal: signal });\n    console.log(\n      'fetchMoviesTrendingToday response.data.results, ',\n      response.data.results\n    );\n    const movies = getNormalizedMovies(response.data.results);\n    return movies;\n  } catch (error) {\n    if (axios.isCancel(error)) {\n      return [];\n    }\n    throw new Error(error);\n  }\n};\n\n// export const fetchMoviesTrendingToday = async () => {\n//   const url = `${BASE_URL}3/trending/movie/day?api_key=${API_KEY}&language=en-US&page=1&include_adult=false`;\n//   try {\n//     const response = await axios.get(url);\n//     console.log(\n//       'fetchMoviesTrendingToday response.data.results, ',\n//       response.data.results\n//     );\n//     const movies = getNormalizedMovies(response.data.results);\n//     return movies;\n//   } catch (error) {\n//     throw new Error(error);\n//   }\n// };\n\nexport const fetchMoviesByName = async ({ query }) => {\n  const url = `${BASE_URL}3/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`;\n  try {\n    const response = await axios.get(url);\n    console.log(\n      'fetchMoviesByName response.data.results, ',\n      response.data.results\n    );\n    const movies = getNormalizedMovies(response.data.results);\n    return movies;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\nconst getNormalizedMovies = movies => {\n  const normalizedData = movies.map(\n    ({ id, original_title, title, overview, genres }) => {\n      return { id, original_title, title, overview, genres };\n    }\n  );\n  return normalizedData;\n};\n\nexport const fetchMovieById = async ({ movieId }) => {\n  const url = `${BASE_URL}3/movie/${movieId}?api_key=${API_KEY}&language=en-US&page=1&include_adult=false`;\n  try {\n    const response = await axios.get(url);\n    console.log('fetchMoviesById response.data, ', response.data);\n    // const movie = getNormalizedMovies(response.data.results);\n    const movie = response.data;\n    return movie;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\nexport const fetchMovieByIdCast = async ({ movieId }) => {\n  const url = `${BASE_URL}3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US&page=1&include_adult=false`;\n  try {\n    const response = await axios.get(url);\n    console.log('fetchMovieByIdCast response.data.cast, ', response.data.cast);\n    // const movie = getNormalizedMovies(response.data.results);\n    const cast = response.data.cast;\n    return cast;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\nexport const fetchMovieByIdReviews = async ({ movieId }) => {\n  const url = `${BASE_URL}3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1&include_adult=false`;\n  try {\n    const response = await axios.get(url);\n    console.log(\n      'fetchMovieByIdReviews response.data.results, ',\n      response.data.results\n    );\n    // const movie = getNormalizedMovies(response.data.results);\n    const movie = response.data.results;\n    return movie;\n  } catch (error) {\n    throw new Error(error);\n  }\n};","import { HiArrowLeft } from 'react-icons/hi';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: orangered;\n  }\n`;\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n","import { useParams, useLocation } from 'react-router-dom';\nimport { Link, Outlet } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { Suspense } from 'react';\nimport { BackLink } from 'components/BackLink';\nimport { fetchMovieById } from 'api';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getMovie = async () => {\n      const movie = await fetchMovieById({ movieId });\n      setMovie(movie);\n    };\n    getMovie();\n  }, [movieId]);\n\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/movies';\n  if (!movie) return <p>loading...</p>;\n\n  const { title, poster_path, vote_average, overview, release_date, genres } =\n    movie;\n\n  const strPoster = 'https://image.tmdb.org/t/p/w300';\n\n  const year1 = new Date(release_date).getFullYear();\n  // const year2 = release_date.split('-')[0];\n  // const year3 = release_date.slice(0, 4);\n  const genresList = genres.map(({ name }) => name).join(', ');\n  // const genresList = genres.map(genre => genre.name).join(', ');\n\n  return (\n    <main style={{ marginLeft: '30px' }}>\n      <BackLink to={backLinkHref}>Go back</BackLink>\n      <img src={strPoster + poster_path} alt={title} />\n      <div>\n        <h2>\n          {title} ({year1})\n        </h2>\n        <p>User Score: {vote_average * 10}%</p>\n        <h3>Overview</h3>\n        <p>{overview}</p>\n        <h3>Genres</h3>\n        <p>{genresList}</p>\n      </div>\n      <div>\n        <h3>Additional information</h3>\n        <ul>\n          <li>\n            <Link to=\"cast\" state={{ from: location.state?.from ?? '/' }}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to=\"reviews\" state={{ from: location.state?.from ?? '/' }}>\n              Reviews\n            </Link>\n          </li>\n        </ul>\n        <Suspense fallback={<div>Loading subpage...</div>}>\n          <Outlet />\n        </Suspense>\n      </div>\n    </main>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["BASE_URL","API_KEY","fetchMoviesTrendingToday","signal","url","axios","response","console","log","data","results","movies","getNormalizedMovies","Error","fetchMoviesByName","query","map","id","original_title","title","overview","genres","fetchMovieById","movieId","movie","fetchMovieByIdCast","cast","fetchMovieByIdReviews","StyledLink","styled","Link","BackLink","to","children","size","useState","setMovie","useParams","useEffect","getMovie","location","useLocation","backLinkHref","state","from","poster_path","vote_average","release_date","year1","Date","getFullYear","genresList","name","join","style","marginLeft","src","alt","Suspense","fallback"],"sourceRoot":""}