{"version":3,"file":"static/js/681.4e2d270d.chunk.js","mappings":"kTAGMA,EAAW,8BACXC,EAAU,mCAEHC,EAAwB,mCAAG,WAAMC,GAAN,kFAChCC,EADgC,UACvBJ,EADuB,wCACiBC,EADjB,gEAGbI,EAAAA,GAAAA,IAAUD,EAAK,CAAED,OAAQA,IAHZ,cAG9BG,EAH8B,OAIpCC,QAAQC,IACN,mDACAF,EAASG,KAAKC,SAEVC,EAASC,EAAoBN,EAASG,KAAKC,SARb,kBAS7BC,GAT6B,sCAWhCN,EAAAA,GAAAA,SAAA,MAXgC,0CAY3B,IAZ2B,cAc9B,IAAIQ,MAAJ,MAd8B,0DAAH,sDAiCxBC,EAAiB,mCAAG,kGAASC,EAAT,EAASA,MAClCX,EADyB,UAChBJ,EADgB,kCACkBC,EADlB,4DAC6Ec,GAD7E,kBAGNV,EAAAA,GAAAA,IAAUD,GAHJ,cAGvBE,EAHuB,OAI7BC,QAAQC,IACN,4CACAF,EAASG,KAAKC,SAEVC,EAASC,EAAoBN,EAASG,KAAKC,SARpB,kBAStBC,GATsB,wCAWvB,IAAIE,MAAJ,MAXuB,0DAAH,sDAexBD,EAAsB,SAAAD,GAM1B,OALuBA,EAAOK,KAC5B,YACE,MAAO,CAAEC,GAD0C,EAAlDA,GACYC,eADsC,EAA9CA,eACwBC,MADsB,EAA9BA,MACeC,SADe,EAAvBA,SACkBC,OADK,EAAbA,OAEvC,GAGJ,EAEYC,EAAc,mCAAG,kGAASC,EAAT,EAASA,QAC/BnB,EADsB,UACbJ,EADa,mBACMuB,EADN,oBACyBtB,EADzB,gEAGHI,EAAAA,GAAAA,IAAUD,GAHP,cAGpBE,EAHoB,OAI1BC,QAAQC,IAAI,kCAAmCF,EAASG,MAElDe,EAAQlB,EAASG,KANG,kBAOnBe,GAPmB,wCASpB,IAAIX,MAAJ,MAToB,0DAAH,sDAadY,EAAkB,mCAAG,kGAASF,EAAT,EAASA,QACnCnB,EAD0B,UACjBJ,EADiB,mBACEuB,EADF,4BAC6BtB,EAD7B,gEAGPI,EAAAA,GAAAA,IAAUD,GAHH,cAGxBE,EAHwB,OAI9BC,QAAQC,IAAI,0CAA2CF,EAASG,KAAKiB,MAE/DA,EAAOpB,EAASG,KAAKiB,KANG,kBAOvBA,GAPuB,wCASxB,IAAIb,MAAJ,MATwB,0DAAH,sDAalBc,EAAqB,mCAAG,kGAASJ,EAAT,EAASA,QACtCnB,EAD6B,UACpBJ,EADoB,mBACDuB,EADC,4BAC0BtB,EAD1B,gEAGVI,EAAAA,GAAAA,IAAUD,GAHA,cAG3BE,EAH2B,OAIjCC,QAAQC,IACN,gDACAF,EAASG,KAAKC,SAGVc,EAAQlB,EAASG,KAAKC,QATK,kBAU1Bc,GAV0B,wCAY3B,IAAIX,MAAJ,MAZ2B,0DAAH,qD,yGCrDlC,UAhCgB,WACd,OAA8Be,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQP,GAAYQ,EAAAA,EAAAA,MAAZR,QAUR,OARAS,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,qGACKN,EAAAA,EAAAA,IAAsB,CAAEJ,QAAAA,IAD7B,OACXM,EADW,OAEjBC,EAAWD,GAFM,2CAAH,qDAIhBI,GACD,GAAE,CAACV,KAGF,8BACE,yBACGM,EAAQK,OAAS,GAChB,wBACGL,EAAQb,KAAI,SAAAmB,GAAC,OACZ,2BACE,oCAAYA,EAAEC,WACd,uBAAID,EAAEE,YAFCF,EAAElB,GADC,OAQhB,wEAKT,C","sources":["api.js","components/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n// import PropTypes from 'prop-types';\n\nconst BASE_URL = 'https://api.themoviedb.org/';\nconst API_KEY = '857288c3c5f42347171bc7541b9a4b57';\n\nexport const fetchMoviesTrendingToday = async signal => {\n  const url = `${BASE_URL}3/trending/movie/day?api_key=${API_KEY}&language=en-US&page=1&include_adult=false`;\n  try {\n    const response = await axios.get(url, { signal: signal });\n    console.log(\n      'fetchMoviesTrendingToday response.data.results, ',\n      response.data.results\n    );\n    const movies = getNormalizedMovies(response.data.results);\n    return movies;\n  } catch (error) {\n    if (axios.isCancel(error)) {\n      return [];\n    }\n    throw new Error(error);\n  }\n};\n\n// export const fetchMoviesTrendingToday = async () => {\n//   const url = `${BASE_URL}3/trending/movie/day?api_key=${API_KEY}&language=en-US&page=1&include_adult=false`;\n//   try {\n//     const response = await axios.get(url);\n//     console.log(\n//       'fetchMoviesTrendingToday response.data.results, ',\n//       response.data.results\n//     );\n//     const movies = getNormalizedMovies(response.data.results);\n//     return movies;\n//   } catch (error) {\n//     throw new Error(error);\n//   }\n// };\n\nexport const fetchMoviesByName = async ({ query }) => {\n  const url = `${BASE_URL}3/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`;\n  try {\n    const response = await axios.get(url);\n    console.log(\n      'fetchMoviesByName response.data.results, ',\n      response.data.results\n    );\n    const movies = getNormalizedMovies(response.data.results);\n    return movies;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\nconst getNormalizedMovies = movies => {\n  const normalizedData = movies.map(\n    ({ id, original_title, title, overview, genres }) => {\n      return { id, original_title, title, overview, genres };\n    }\n  );\n  return normalizedData;\n};\n\nexport const fetchMovieById = async ({ movieId }) => {\n  const url = `${BASE_URL}3/movie/${movieId}?api_key=${API_KEY}&language=en-US&page=1&include_adult=false`;\n  try {\n    const response = await axios.get(url);\n    console.log('fetchMoviesById response.data, ', response.data);\n    // const movie = getNormalizedMovies(response.data.results);\n    const movie = response.data;\n    return movie;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\nexport const fetchMovieByIdCast = async ({ movieId }) => {\n  const url = `${BASE_URL}3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US&page=1&include_adult=false`;\n  try {\n    const response = await axios.get(url);\n    console.log('fetchMovieByIdCast response.data.cast, ', response.data.cast);\n    // const movie = getNormalizedMovies(response.data.results);\n    const cast = response.data.cast;\n    return cast;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\nexport const fetchMovieByIdReviews = async ({ movieId }) => {\n  const url = `${BASE_URL}3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1&include_adult=false`;\n  try {\n    const response = await axios.get(url);\n    console.log(\n      'fetchMovieByIdReviews response.data.results, ',\n      response.data.results\n    );\n    // const movie = getNormalizedMovies(response.data.results);\n    const movie = response.data.results;\n    return movie;\n  } catch (error) {\n    throw new Error(error);\n  }\n};","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { fetchMovieByIdReviews } from 'api';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getReviews = async () => {\n      const reviews = await fetchMovieByIdReviews({ movieId });\n      setReviews(reviews);\n    };\n    getReviews();\n  }, [movieId]);\n\n  return (\n    <section>\n      <div>\n        {reviews.length > 0 ? (\n          <ul>\n            {reviews.map(r => (\n              <li key={r.id}>\n                <p>Author: {r.author}</p>\n                <p>{r.content}</p>\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <p>We don't have any reviews for this movie.</p>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default Reviews;\n"],"names":["BASE_URL","API_KEY","fetchMoviesTrendingToday","signal","url","axios","response","console","log","data","results","movies","getNormalizedMovies","Error","fetchMoviesByName","query","map","id","original_title","title","overview","genres","fetchMovieById","movieId","movie","fetchMovieByIdCast","cast","fetchMovieByIdReviews","useState","reviews","setReviews","useParams","useEffect","getReviews","length","r","author","content"],"sourceRoot":""}